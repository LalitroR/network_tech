# [PackageDev] target_format: plist, ext: tmLanguage
name: Cisco ACE Policy Map
scopeName: text.network.cisco.ace.policy
uuid: 2f2986dd-256a-44d3-b551-a5f6535845fa

patterns:
- include: '#policy-load-balance'
- include: '#policy-map'
- include: '#policy-map-management'

repository:
  deny:
    patterns:
    - name: text.network.cisco.ace.policy.class.deny
      match: ^\s*(deny)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: keyword.other}
        '2': {name: invalid.illegal}

  drop:
    patterns:
    - name: text.network.cisco.ace.policy.class.drop
      match: ^\s*(drop)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: keyword.other}
        '2': {name: invalid.illegal}

  forward:
    patterns:
    - name: text.network.cisco.ace.policy.class.forward
      match: ^\s*(forward)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: entity.name.function}
        '2': {name: invalid.illegal}

  loadbalance-policy:
    patterns:
    - name: text.network.cisco.ace.policy.policy-class.lb-policy
      match: (loadbalance\s+policy)\s+(\S+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}

  loadbalance-vip-icmp-reply:
    patterns:
    - name: text.network.cisco.ace.policy.policy-class.lb.icmp-reply
      match: (loadbalance\s+vip)\s+(icmp-reply)(\s+active)?\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: support.constant}
        '4': {name: invalid.illegal}

  loadbalance-vip-inservice:
    patterns:
    - name: text.network.cisco.ace.policy.policy-class.lb-vip-inservice
      match: (loadbalance\s+vip)\s+(inservice)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: entity.name.function}
        '3': {name: invalid.illegal}

  nat-dynamic:
    patterns:
    - name: text.network.cisco.ace.policy.policy-class.nat-dynamic
      match: (nat\s+dynamic)\s+(\d+)\s+(vlan)\s+(\d+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.language}
        '3': {name: support.constant}
        '4': {name: constant.language}
        '5': {name: invalid.illegal}

  permit:
    patterns:
    - name: text.network.cisco.ace.policy.class.permit
      match: ^\s*(permit)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: entity.name.function}
        '2': {name: invalid.illegal}

  policy-class:
    patterns:
    - name: text.network.cisco.ace.policy.policy-class
      begin: \s+(class)\s+(class-default|\S+)(?:\s+(\S+))?$
      beginCaptures:
        '1': {name: variable.parameter}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S)|(?:\s*class\s))
      patterns:
      - include: '#loadbalance-policy'
      - include: '#loadbalance-vip-inservice'
      - include: '#loadbalance-vip-icmp-reply'
      - include: '#nat-dynamic'
      - include: '#appl-parameter'
      - include: '#ssl-proxy-server'
      - include: '#connection-options'
      - include: text.network.cisco

  connection-options:
    patterns:
    - name: text.network.cisco.ace.policy.map.connection
      match: ^\s*(connection)\s+(advanced-options)\s+(\S+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}

  ssl-proxy-server:
    patterns:
    - name: text.network.cisco.ace.policy.map.ssl-proxy
      match: ^\s*(ssl-proxy)\s+(server)\s+(\S+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}

  appl-parameter:
    patterns:
    - name: text.network.cisco.ace.policy.map.appl
      begin: (?i)^\s*(appl-parameter)
      beginCaptures:
        '1': {name: support.constant}
      end: (?=$)
      patterns:
      - include: '#appl-http'

  appl-http:
    patterns:
    - name: text.network.cisco.ace.policy.map.appl.http
      begin: (?i)(http)
      beginCaptures:
        '1': {name: entity.name.function}
      end: (?=$)
      patterns:
      - include: '#appl-http-adv-opts'

  appl-http-adv-opts:
    patterns:
    - name: text.network.cisco.ace.policy.map.appl.http.adv-options
      begin: (?i)(advanced-options)\s+(\S+)
      beginCaptures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
      end: (?=$)
      patterns:
      - include: '#protocol'

  policy-class-management:
    patterns:
    - name: text.network.cisco.ace.policy.policy-class-management
      begin: \s+(class)\s+(class-default|\S+)(?:\s+(\S+))?$
      beginCaptures:
        '1': {name: variable.parameter}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S)|(?:class\s))
      patterns:
      - include: '#permit'
      - include: '#deny'
      - include: text.network.cisco.scope
      - include: text.network.cisco

  policy-lb-class:
    patterns:
    - name: text.network.cisco.ace.policy.policy-lb-class
      begin: \s+(class)\s+(class-default|\S+)(?:\s+(\S+))?$
      beginCaptures:
        '1': {name: variable.parameter}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S)|(?:class\s))
      patterns:
      - include: '#sticky-serverfarm'
      - include: '#serverfarm'
      - include: '#drop'
      - include: '#forward'
      - include: '#action'
      - include: '#ssl-proxy-client'
      - include: text.network.cisco

  action:
    patterns:
    - name: text.network.cisco.ace.policy.policy-lb-class.action
      match: ^\s*(action)\s+(\S+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}

  ssl-proxy-client:
    patterns:
    - name: text.network.cisco.ace.policy.policy-lb-class.ssl-proxy-client
      match: ^\s*(ssl-proxy)\s+(client)\s+(\S+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}

  policy-load-balance:
    patterns:
    - name: text.network.cisco.ace.policy.load-balance
      begin: ^(policy-map)\s+(type)\s+(loadbalance)\s+(first-match|genericfirst-match|http\s+first-match|radius\s+first-match|rdp\s+first-match|rtsp\s+first-match|sip\s+first-match)\s+(\S+)\s*(\s+\S+)?\s*$
      beginCaptures:
        '1': {name: variable.parameter}
        '2': {name: support.constant}
        '3': {name: entity.name.function}
        '4': {name: entity.name.function}
        '5': {name: string.unquoted}
        '6': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S)|(?:class\s))
      patterns:
      - include: '#policy-lb-class'
      - include: text.network.cisco
      - include: text.network.cisco.scope

  policy-map:
    patterns:
    - name: text.network.cisco.ace.policy.map
      begin: ^(policy-map)\s+(multi-match)\s+(\S+)\s*(\s+\S+)?$
      beginCaptures:
        '1': {name: variable.parameter}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S)|(?:class\s))
      patterns:
      - include: '#policy-class'
      - include: text.network.cisco
      - include: text.network.cisco.scope

  policy-map-management:
    patterns:
    - name: text.network.cisco.ace.policy.map.management
      begin: ^(policy-map)\s+(type)\s+(management)\s+(first-match)\s+(\S+)\s*(?:\s+(\S.*))?$
      beginCaptures:
        '1': {name: variable.parameter}
        '2': {name: support.constant}
        '3': {name: entity.name.function}
        '4': {name: support.constant}
        '5': {name: string.unquoted}
        '6': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S)|(?:class\s))
      patterns:
      - include: '#policy-class-management'
      - include: text.network.cisco.scope
      - include: text.network.cisco

  serverfarm:
    patterns:
    - name: text.network.cisco.ace.policy.class.serverfarm
      match: (serverfarm)\s+(\S+)(?:\s+(backup)\s+(\S+))?(?:\s+(aggregate-state))?\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: support.constant}
        '4': {name: string.unquoted}
        '5': {name: support.constant}
        '6': {name: invalid.illegal}

  sticky-serverfarm:
    patterns:
    - name: text.network.cisco.ace.policy.class.sticky-serverfarm
      match: (sticky-serverfarm)\s+(\S+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}
