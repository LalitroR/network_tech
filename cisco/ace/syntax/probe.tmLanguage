<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array/>
	<key>name</key>
	<string>.</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#probe-http</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#probe-https</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#probe-tcp</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#probe-icmp</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>expect-regex</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(expect)\s+(regex)\s+((?:".*")|\S+)(?:\s+(offset)\s+(\d+))?(?:\s+(cache)\s+(\d+))?\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>expect</string>
				</dict>
			</array>
		</dict>
		<key>expect-status</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(expect)\s+(status)\s+(\d+)\s+(\d+)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>expect</string>
				</dict>
			</array>
		</dict>
		<key>fail-detect</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(faildetect)\s?(\d+)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>fail-detect</string>
				</dict>
			</array>
		</dict>
		<key>hash</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(hash)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>hash</string>
				</dict>
			</array>
		</dict>
		<key>http-header</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(header)\s+(Accept|Accept-Charset|Accept-Encoding|Accept-Language|Authorization|Cache-Control|Connection|Content-MD5|Expect|From|Host|If-Match|Pragma|Referer|Transfer-Encoding|User-Agent|Via)\s+(?:(\d+)|(\S+))\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>header</string>
				</dict>
			</array>
		</dict>
		<key>interval</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(interval)\s?(\d+)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>interval</string>
				</dict>
			</array>
		</dict>
		<key>ipv4-address</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(ip\s+address)\s+((?:(?:[0-2]?\d?\d)\.){3}[0-2]?\d?\d)(?:\s+(routed))?\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>ipv4</string>
				</dict>
			</array>
		</dict>
		<key>ipv6-address</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(ip\s+address)\s+((?:[0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|(?:[0-9a-fA-F]{1,4}:){1,7}:|(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2}|(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3}|(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4}|(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6})|:(?:(?::[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(?:ffff(?::0{1,4}){0,1}:){0,1}(?:(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(?:[0-9a-fA-F]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(?:\s+(routed))?\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>ipv6</string>
				</dict>
			</array>
		</dict>
		<key>open</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(open)\s+(\d+)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>open</string>
				</dict>
			</array>
		</dict>
		<key>pass-detect</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(passdetect)\s+(?:(?:(interval)\s(\d+))|(?:(count)\s+(\d+)))\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>pass-detect</string>
				</dict>
			</array>
		</dict>
		<key>port</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(port)\s+(\d+)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>port</string>
				</dict>
			</array>
		</dict>
		<key>probe-http</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(probe)\s+(http)\s+(\S+)\s*(\S.*)?$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>probe.block</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S))</string>
					<key>name</key>
					<string>probe.http</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#ipv4-address</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#ipv6-address</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#open</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interval</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pass-detect</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#fail-detect</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#port</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#receive</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#request-method</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expect-regex</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expect-status</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#http-header</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.network.cisco.scope</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.network.cisco</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>probe-https</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(probe)\s+(https)\s+(\S+)\s*(\S.*)?$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>probe.block</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S))</string>
					<key>name</key>
					<string>probe.https</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#ipv4-address</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#ipv6-address</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#open</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interval</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pass-detect</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#fail-detect</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#port</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#receive</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#request-method</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expect-regex</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expect-status</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#http-header</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#ssl-version</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.network.cisco.scope</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.network.cisco</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>probe-icmp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(probe)\s+(icmp)\s+(\S+)\s*(\S.*)?$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>probe.block</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S))</string>
					<key>name</key>
					<string>probe.icmp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#ipv4-address</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#ipv6-address</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#open</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interval</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pass-detect</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#fail-detect</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#port</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#receive</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.network.cisco.scope</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.network.cisco</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>probe-tcp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(probe)\s+(tcp)\s+(\S+)\s*(\S.*)?$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>probe.block</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S))</string>
					<key>name</key>
					<string>probe.tcp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interval</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#open</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pass-detect</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#fail-detect</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#ipv4-address</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#ipv6-address</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#port</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#receive</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#send-data</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.network.cisco.scope</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.network.cisco</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>receive</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(receive)\s+(\d+)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>receive</string>
				</dict>
			</array>
		</dict>
		<key>request-method</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(request\s+method)\s+(get|head)(?:\s+(url)\s+(\S+))?\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>request</string>
				</dict>
			</array>
		</dict>
		<key>send-data</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(send-data)\s+(\S+)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>send-data</string>
				</dict>
			</array>
		</dict>
		<key>ssl-version</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.constant</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(ssl)\s+(version)\s+(all)\s*(?:\s+(\S+))?$</string>
					<key>name</key>
					<string>version</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>cisco.ace.probe</string>
	<key>uuid</key>
	<string>e30f827f-a6b5-4a81-a619-a7f9ce82fe91</string>
</dict>
</plist>
