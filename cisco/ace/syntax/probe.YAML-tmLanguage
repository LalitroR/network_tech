# [PackageDev] target_format: plist, ext: tmLanguage
name: .
scopeName: cisco.ace.probe
fileTypes: []
uuid: e30f827f-a6b5-4a81-a619-a7f9ce82fe91

patterns:
- include: '#probe-http'
- include: '#probe-https'
- include: '#probe-tcp'

repository:
  expect-regex:
    patterns:
    - name: expect
      match: (expect)\s+(regex)\s+((?:".*")|\S+)(?:\s+(offset)\s+(\d+))?(?:\s+(cache)\s+(\d+))?\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: entity.other.attribute-name}
        '3': {name: string.unquoted}
        '4': {name: support.constant}
        '5': {name: constant.language}
        '6': {name: support.constant}
        '7': {name: constant.language}
        '8': {name: invalid.illegal}

  ssl-version:
    patterns:
    - name: version
      match: (ssl)\s+(version)\s+(all)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: support.constant}
        '4': {name: invalid.illegal}

  expect-status:
    patterns:
    - name: expect
      match: (expect)\s+(status)\s+(\d+)\s+(\d+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: entity.other.attribute-name}
        '3': {name: constant.language}
        '4': {name: constant.language}
        '5': {name: invalid.illegal}

  fail-detect:
    patterns:
    - name: fail-detect
      match: (faildetect)\s?(\d+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.language}
        '3': {name: invalid.illegal}

  hash:
    patterns:
    - name: hash
      match: (hash)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: constant.language}
        '2': {name: invalid.illegal}

  http-header:
    patterns:
    - name: header
      match: (header)\s+(Accept|Accept-Charset|Accept-Encoding|Accept-Language|Authorization|Cache-Control|Connection|Content-MD5|Expect|From|Host|If-Match|Pragma|Referer|Transfer-Encoding|User-Agent|Via)\s+(?:(\d+)|(\S+))\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: entity.other.attribute-name}
        '3': {name: support.constant}
        '4': {name: constant.language}
        '5': {name: string.quoted.single}
        '6': {name: invalid.illegal}

  interval:
    patterns:
    - name: interval
      match: (interval)\s?(\d+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.language}
        '3': {name: invalid.illegal}

  ipv4-address:
    patterns:
    - name: ipv4
      match: (ip\s+address)\s+((?:(?:[0-2]?\d?\d)\.){3}[0-2]?\d?\d)(?:\s+(routed))?\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.language}
        '3': {name: support.constant}
        '4': {name: invalid.illegal}

  ipv6-address:
    patterns:
    - name: ipv6
      match: (ip\s+address)\s+((?:[0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|(?:[0-9a-fA-F]{1,4}:){1,7}:|(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2}|(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3}|(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4}|(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6})|:(?:(?::[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(?:ffff(?::0{1,4}){0,1}:){0,1}(?:(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(?:[0-9a-fA-F]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(?:\s+(routed))?\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.language}
        '3': {name: support.constant}
        '4': {name: invalid.illegal}

  open:
    patterns:
    - name: open
      match: (open)\s+(\d+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.language}
        '3': {name: invalid.illegal}

  pass-detect:
    patterns:
    - name: pass-detect
      match: (passdetect)\s+(?:(?:(interval)\s(\d+))|(?:(count)\s+(\d+)))\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: constant.language}
        '4': {name: support.constant}
        '5': {name: constant.language}
        '6': {name: invalid.illegal}

  port:
    patterns:
    - name: port
      match: (port)\s+(\d+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.language}
        '3': {name: invalid.illegal}

  probe-http:
    patterns:
    - name: probe.http
      begin: ^\s*(probe)\s+(http)\s+(\S+)\s*(\S.*)?$
      beginCaptures:
        '0': {name: probe.block}
        '1': {name: variable.parameter}
        '2': {name: entity.other.attribute-name}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S))
      patterns:
      - include: '#ipv4-address'
      - include: '#ipv6-address'
      - include: '#open'
      - include: '#interval'
      - include: '#pass-detect'
      - include: '#fail-detect'
      - include: '#port'
      - include: '#receive'
      - include: '#request-method'
      - include: '#expect-regex'
      - include: '#hash'
      - include: '#expect-status'
      - include: '#http-header'
      - include: text.network.cisco.scope
      - include: text.network.cisco
      - include: text.invalid

  probe-https:
    patterns:
    - name: probe.https
      begin: ^\s*(probe)\s+(https)\s+(\S+)\s*(\S.*)?$
      beginCaptures:
        '0': {name: probe.block}
        '1': {name: variable.parameter}
        '2': {name: entity.other.attribute-name}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S))
      patterns:
      - include: '#ipv4-address'
      - include: '#ipv6-address'
      - include: '#open'
      - include: '#interval'
      - include: '#pass-detect'
      - include: '#fail-detect'
      - include: '#port'
      - include: '#receive'
      - include: '#request-method'
      - include: '#expect-regex'
      - include: '#hash'
      - include: '#expect-status'
      - include: '#http-header'
      - include: '#ssl-version'
      - include: text.network.cisco.scope
      - include: text.network.cisco
      - include: text.invalid

  probe-tcp:
    patterns:
    - name: probe.tcp
      begin: ^\s*(probe)\s+(tcp)\s+(\S+)\s*(\S.*)?$
      beginCaptures:
        '0': {name: probe.block}
        '1': {name: variable.parameter}
        '2': {name: entity.other.attribute-name}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S))
      patterns:
      - include: '#interval'
      - include: '#open'
      - include: '#pass-detect'
      - include: '#fail-detect'
      - include: '#ipv4-address'
      - include: '#ipv6-address'
      - include: '#port'
      - include: '#receive'
      - include: '#send-data'
      - include: text.network.cisco.scope
      - include: text.network.cisco
      - include: text.invalid

  receive:
    patterns:
    - name: receive
      match: (receive)\s+(\d+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.language}
        '3': {name: invalid.illegal}

  request-method:
    patterns:
    - name: request
      match: (request\s+method)\s+(get|head)(?:\s+(url)\s+(\S+))?\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: entity.other.attribute-name}
        '3': {name: support.constant}
        '4': {name: string.quoted.single}
        '5': {name: invalid.illegal}

  send-data:
    patterns:
    - name: send-data
      match: (send-data)\s+(\S+)\s*(?:\s+(\S+))?$
      captures:
        '1': {name: support.constant}
        '2': {name: string.quoted.single}
        '3': {name: invalid.illegal}
