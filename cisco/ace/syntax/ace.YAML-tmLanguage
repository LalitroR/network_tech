# [PackageDev] target_format: plist, ext: tmLanguage
name: Cisco ACE
scopeName: cisco.ace
fileTypes: [ace]
uuid: e5441a2e-8364-4349-b1e2-f79db773f565

patterns:
- include: '#reload'
- include: '#backup-context'
- include: '#write-memory'
- include: '#dir'
- include: '#boot-system'
- include: '#config-register'
- include: '#crypto-authgroup'
- include: '#checkpoint-create'
- include: '#crypto-chaingroup'
- include: '#copy'
- include: '#changeto'
- include: '#crypto-delete'
- include: '#crypto-import'
- include: '#crypto-verify'
- include: '#remove-configuration'
- include: '#configure-terminal'
- include: '#ssl-proxy'
- include: '#serverfarm'
- include: '#hostname'
- include: '#system-defaults-http-parsing'
- include: '#route'
- include: '#snmp-contact'
- include: '#snmp-location'
- include: '#snmp-community'
- include: '#snmp-host'
- include: '#snmp-trap-source'
- include: '#snmp-trap-slb-enable'
- include: '#snmp-trap-snmp-enable'
- include: '#snmp-trap-syslog-enable'
- include: '#snmp-trap-link-ietf'
- include: text.network.cisco
- include: cisco.ace.probe
- include: cisco.ace.show
- include: cisco.ace.logging
- include: text.network.cisco.ace.rserver
- include: text.network.cisco.ace.serverfarm
- include: text.network.cisco.ace.sticky
- include: text.network.cisco.ace.class-map
- include: text.network.cisco.ace.policy
- include: text.network.cisco.ace.acl
- include: text.network.cisco.ace.interface
- include: text.network.cisco.ace.resource-class
- include: text.network.cisco.ace.context
- include: text.network.cisco.ace.ft-group
- include: text.network.cisco.ace.parameter-map

repository:
  system-defaults-http-parsing:
    patterns:
    - name: system.defaults.http.parsing
      match: ^\s*(system-defaults\s+http-parsing\s+allow-non-encoded-chars)
      captures:
        '1': {name: support.constant}

  snmp-trap-link-ietf:
    patterns:
    - name: snmp.trap.ietf
      match: ^\s*(snmp-server)\s+(trap)\s+(link)\s+(ietf)$
      captures:
        '0': {name: ace.snmp.trap.ietf.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: support.constant}
        '4': {name: support.constant}

  snmp-trap-snmp-enable:
    patterns:
    - name: snmp.trap
      match: ^\s*(snmp-server)\s+(enable)\s+(traps)\s+(snmp)\s+(authentication|linkup|linkdown)$
      captures:
        '0': {name: ace.snmp.trap.enable.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: support.constant}
        '4': {name: support.constant}
        '5': {name: support.constant}
  snmp-trap-syslog-enable:
    patterns:
    - name: snmp.trap.syslog
      match: ^\s*(snmp-server)\s+(enable)\s+(traps)\s+(syslog)$
      captures:
        '0': {name: ace.snmp.trap.syslog.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: support.constant}
        '4': {name: support.constant}
        '5': {name: support.constant}
        '6': {name: invalid.illegal}
  snmp-trap-slb-enable:
    patterns:
    - name: snmp.trap.slb
      match: ^\s*(snmp-server)\s+(enable)\s+(traps)\s+(slb)\s+(vserver|real)$
      captures:
        '0': {name: ace.snmp.trap.slb.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: support.constant}
        '4': {name: support.constant}
        '5': {name: support.constant}
        '6': {name: invalid.illegal}
  snmp-trap-source:
    patterns:
    - name: snmp.trap.source
      match: ^\s*(snmp-server)\s+(trap-source)\s+(vlan)\s+(\d+)$
      captures:
        '0': {name: ace.snmp.trap.source.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: support.constant}
        '4': {name: constant.numeric}
  
  snmp-host:
    patterns:
    - name: snmp.host
      match: ^\s*(snmp-server)\s+(host)\s+((?:(?:[0-2]?\d?\d)\.){3}[0-2]?\d?\d)\s+(traps)\s+(version)\s+(1|2c)\s+(\S+)
      captures:
        '0': {name: ace.snmp.host.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: constant.numeric}
        '4': {name: support.constant}
        '5': {name: support.constant}
        '6': {name: support.constant}
        '7': {name: string.unquoted}

  snmp-community:
    patterns:
    - name: snmp.community
      match: ^\s*(snmp-server)\s+(community)\s+(\S+)\s+(group)\s+(\S+)$
      captures:
        '0': {name: ace.snmp.community.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
        '4': {name: support.constant}
        '5': {name: string.unquoted}

  snmp-contact:
    patterns:
    - name: snmp.contact
      match: ^\s*(snmp-server)\s+(contact)\s+(.*)$
      captures:
        '0': {name: ace.snmp.contact.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: string.unquoted}

  snmp-location:
    patterns:
    - name: snmp.location
      match: ^\s*(snmp-server)\s+(location)\s+(.*)
      captures:
        '0': {name: ace.snmp.location.block}
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: string.unquoted}

  certificate-key-import:
    patterns:
    - name: text.pki.format.base64
      begin: ^(\s*)(-----.*-----)(\s*)\n$
      beginCaptures:
        '1': {name: invalid.illegal}
        '2': {name: constant.language}
        '3': {name: invalid.illegal}
      end: \n^(\s*)(-----.*-----)(\s*)\n$
      endCaptures:
        '1': {name: invalid.illegal}
        '2': {name: constant.language}
        '3': {name: invalid.illegal}
      patterns:
      - include: '#key-data'

  configure-terminal:
    patterns:
    - name: text.network.cisco.ace.configure-termial
      match: ^\s*(configure)\s+(terminal)$
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: invalid.illegal}

  changeto:
    patterns:
    - comment: Keywords
      name: text.network.cisco.ace.keywords
      match: ^(\S*)\s*(changeto)\s+(\S+)\s*(\S*.*)?$
      captures:
        '0': {name: text.network.cisco.ace.changeto}
        '1': {name: invalid.illegal}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}

  crypto-import:
    patterns:
    - name: text.network.cisco.ace.crypto.import
      begin: ^\s*(crypto)\s+(import)\s+(\S+)\s+(\S+)\s*(\S*.*)?$
      beginCaptures:
        '1': {name: variable.parameter}
        '2': {name: support.constant}
        '3': {name: support.constant}
        '4': {name: string.unquoted}
        '5': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*)*(?:\s+\S))$)|(?:\S))
      endCaptures:
        '0': {name: keyword.control}
      patterns:
      - include: '#certificate-key-import'

  crypto-verify:
    patterns:
    - name: text.network.cisco.ace.pki.verify
      match: ^(\S*)\s*(crypto\s+verify)\s+(\S+\s+\S+)\s*(\S*.*)?$
      captures:
        '0': {name: text.network.cisco.ace.pki.verify}
        '1': {name: keyword.other}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}

  crypto-delete:
    patterns:
    - name: text.network.cisco.ace.pki.delete
      match: ^\s*(crypto)\s+(delete)\s+(\S+)\s*(\S*.*)?$
      captures:
        '0': {name: text.network.cisco.ace.pki.verify}
        '1': {name: support.constant}
        '2': {name: keyword.other}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}

  hostname:
    patterns:
    - comment: Keywords
      name: text.network.cisco.ace.hostname
      match: ^\s*(hostname)\s+(\S+)\s*(\S*.*)?$
      captures:
        '0': {name: text.network.cisco.ace.hostname}
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}

  key-data:
    patterns:
    - name: pki.key.data
      match: ^(\S*)(\s*)(\S*)\n$
      captures:
        '1': {name: comment.line}
        '2': {name: invalid.illegal}
        '3': {name: comment.line}

  remove-configuration:
    patterns:
    - name: text.network.cisco.ios.remove
      match: (\s*no .*)$
      captures:
        '1': {name: keyword.other}

  route:
    patterns:
    - name: ipv4.route
      match: ^(ip\s+route)\s+((?:(?:[0-2]?\d?\d)\.){3}[0-2]?\d?\d)\s+((?:(?:255|254|252|248|240|224|192|128|0)\.){3}(?:255|254|252|248|240|224|192|128|0))\s+((?:(?:[0-2]?\d?\d)\.){3}[0-2]?\d?\d)$
      captures:
        '1': {name: support.constant}
        '2': {name: constant.numeric}
        '3': {name: constant.numeric}
        '4': {name: constant.numeric}

  ssl-proxy:
    patterns:
    - name: ssl-proxy
      begin: ^\s*(ssl-proxy)\s+(service)\s+(\S+)\s*(\S*.*)?$
      beginCaptures:
        '0': {name: ace.ssl-proxy.block}
        '1': {name: variable.parameter}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
        '4': {name: invalid.illegal}
      end: ^(?=(?:\s*(?=(?:\n\s*)*(?:\s+\S))$)|(?:\S))
      patterns:
      - include: text.network.cisco.scope
      - include: text.network.cisco
      - include: '#certificate'
      - include: '#key'
      - include: '#chaingroup'
      - include: '#authgroup'

  crypto-authgroup:
    patterns:
    - name: crypto-authgroup
      begin: ^\s*(crypto)\s+(authgroup)\s+(\S+)
      beginCaptures:
        '0': {name: ace.crypto-authgroup.block}
        '1': {name: variable.parameter}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
      end: ^(?=(?:\s*(?=(?:\n\s*)*(?:\s+\S))$)|(?:\S))
      patterns:
      - include: text.network.cisco.scope
      - include: text.network.cisco
      - include: '#certificate'

  certificate:
    patterns:
    - name: certificate
      match: (cert)\s+(\S+)
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}

  key:
    patterns:
    - name: key
      match: (key)\s+(\S+)
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}

  chaingroup:
    patterns:
    - name: chaingroup
      match: (chaingroup)\s+(\S+)
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}

  authgroup:
    patterns:
    - name: authgroup
      match: (authgroup)\s+(\S+)
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}


  crypto-chaingroup:
    patterns:
    - name: crypto-chaingroup
      begin: ^\s*(crypto)\s+(chaingroup)\s+(\S+)
      beginCaptures:
        '0': {name: ace.crypto-chaingroup.block}
        '1': {name: variable.parameter}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
      end: ^(?=(?:\s*(?=(?:\n\s*)*(?:\s+\S))$)|(?:\S))
      patterns:
      - include: text.network.cisco.scope
      - include: text.network.cisco
      - include: '#certificate'

  copy:
    patterns:
    - name: text.network.cisco.ace.copy
      begin: ^\s*(copy)\s+
      beginCaptures:
        '1': {name: 'support.constant'}
      end: (?=\s*$)
      patterns:
      - include: '#copy-ftp-image'
      - include: '#copy-run-start'
      - include: '#copy-start-run'
      - include: '#copy-run-ftp'


  checkpoint-create:
    patterns:
    - name: text.network.cisco.ace.checkpoint.create
      match: (checkpoint)\s+(?:(create)|(rollback)|(delete))\s+(\S+)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: entity.other.attribute-name}
        '3': {name: keyword.other}
        '4': {name: keyword.other}
        '5': {name: string.unquoted.name}
        '6': {name: invalid.illegal}


  copy-run-start:
    patterns:
    - name: text.network.cisco.ace.copy.run-start
      match: (running-config)\s+(startup-config)
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}

  copy-run-ftp:
    patterns:
    - name: text.network.cisco.ace.copy.run-ftp
      match: (running-config)\s+(t?ftp)(://)((?:\d+\.){3}\d+)(\/\S*)?
      captures:
        '1': {name: support.constant}
        '2': {name: entity.other.attribute-name}
        '3': {name: support.constant}
        '4': {name: constant.language}
        '5': {name: support.constant}

  copy-ftp-image:
    patterns:
    - name: ftp-image
      match: ([ts]?ftp)(://)((?:\d+\.){3}\d+)(?:(/)(\S*))?\s+(image:)
      captures:
        '1': {name: entity.other.attribute-name}
        '2': {name: support.constant}
        '3': {name: constant.language}
        '4': {name: support.constant}
        '5': {name: string.unquoted}
        '6': {name: support.constant}

  copy-start-run:
    patterns:
    - name: text.network.cisco.ace.copy.start-run
      match: (startup-config)\s+(running-config)
      captures:
        '1': {name: keyword.other}
        '2': {name: keyword.other}

  config-register:
    patterns:
    - name: config-register
      match: (config-register)\s+(?:(0x1)|(0x0))
      captures:
        '1': {name: support.constant}
        '2': {name: constant.numeric}
        '3': {name: invalid.deprecated}

  boot-system:
    patterns:
    - name: boot-system
      match: (boot)\s+(system)\s+(image:)(\S+)
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: entity.other.attribute-name}
        '4': {name: string.unquoted}

  write-memory:
    patterns:
    - name: write-memory
      match: (write)\s+(memory)(\s+all)?
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: support.constant}

  dir:
    patterns:
    - name: dir
      match: (dir)\s+(\S+)
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}

  reload:
    patterns:
    - name: reload
      match: ^\s*(reload)\s*$
      captures:
        '1': {name: keyword.other}

  backup-context:
    patterns:
    - name: backup-context
      match: ^(backup)\s+(?:(all)|(\S+))\s*$
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: string.unquoted}
