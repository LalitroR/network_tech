%YAML 1.2
---
name: Cisco Base
file-extensions: [cisco-base]
first_line_match: ^#!\s*cisco(\s+|\-)base$\n?
scope: text.network.cisco
hidden: true

variables:
  comment: '(?:!|#)'
  drive: '(?<drive>(?:flash|disk(?<drive_number>[0-3])?):)'
  uri: '(?<protocol>(?:t?ftp)|scp)(?<protocol_seperator>://)(?<hostname>(?:\d+\.){3}\d+)(?<path>\/\S*)'
  locations: '(?:{{drive}}|{{uri}})'
  pop_ctx: '^\s*(?:end|exit)\s*$'
  drives: |
    (?x)
    (?:
      (?:(?:(?:running)|(?:startup))-config)|
      (?:flash)|
      (?:disk(?:[0-3])?)
    )

contexts:
  main: 
    - include: write
    - include: copy
    - include: logout
    - include: configure_terminal
    - include: show_drives

  prototype:
    - include: pipe

  locations:
    - include: location_local
    - include: location_remote

  location_remote:
    - match: ((?:t?ftp)|scp)(://)((?:\d+\.){3}\d+)(\/\S*)?
      captures:
        1: entity.other.attribute-name
        2: support.constant
        3: constant.language
        4: support.constant

  location_local:
    - match: ({{drives}}|(?:running|startup)-config)
      captures:
        1: support.constant

  write:
    - match: '^\s*(write)\s*'
      captures:
        1: support.constant

  logout:
    - match: '^\s*(logout)\s*'
      captures:
        1: support.constant

  copy:
    - match: '^\s*(copy)\s*'
      set: copy_location_source
      captures:
        1: support.constant

  copy_location_source:
    - match: \s
      set: copy_location_destination
    - include: locations

  copy_location_destination:
    - match: (?:\s|{{comment}}|$)
      pop: true
    - include: locations

  pipe:
    - match: (?<=\s)(\|)[^{{comment}}]*
      scope: text.network.cisco.pipe
      captures:
        1: keyword.other

  show_drives:
    - match: '\s*(show)\s+({{drives}})'
      captures:
        1: support.constant
        2: support.constant
