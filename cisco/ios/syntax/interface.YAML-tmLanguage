# [PackageDev] target_format: plist, ext: tmLanguage
name: Interface
scopeName: text.network.cisco.ios.interface
uuid: 0f297425-7bd7-431d-bfbd-824e3f9aad68

patterns:
- include: '#interface'
- include: '#show-run-int'

repository:
  access:
    patterns:
    - name: text.network.cisco.ios.interface.switchport.mode
      match: (access)\s+(vlan)\s+(\d+)
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: constant.numeric.vlan.id}

  interface:
    patterns:
    - name: text.network.cisco.ios.interface
      begin: ^\s*(interface)\s+(\D+)(?:\s+)?(\d+(?:/\d+)*(?:\.\d+)?)
      beginCaptures:
        '1': {name: variable.parameter}
        '2': {name: entity.other.inherited-class}
        '3': {name: constant.numeric}
      end: ^(?=(?:\s*(?=(?:\n\s*\n)*(?:\s+\S))$)|(?:\S)|(?:\s*(?:exit|end)))
      patterns:
      - include: '#switchport'
      - include: '#ip'
      - include: '#ipv6'
      - include: '#shutdown'
      - include: '#vrf-legacy'
      - include: '#vrf'
      - include: '#access-group'
      - include: '#ipv6-nd-prefix'
      - include: '#hsrp-version'
      - include: '#hsrp-ip'
      - include: '#hsrp-ipv6'
      - include: '#hsrp-priority'
      - include: '#hsrp-preempt'
      - include: '#ip-redirects'
      - include: '#ip-proxy-arp'
      - include: '#ip-helper'
      - include: '#no-shutdown'
      - include: text.network.cisco.scope
      - include: text.network.cisco

  ip:
    patterns:
    - name: text.network.cisco.ios.interface.ip
      match: \s*(ip\s+address)\s+((?:(?:[0-2]?\d?\d)\.){3}[0-2]?\d?\d(?=[^:])(?:(?:\s+(?:(?:255|254|252|248|240|224|192|128|0)\.){3}(?:255|254|252|248|240|224|192|128|0))))(\s+secondary)?(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: constant.numeric.ipv4}
        '3': {name: support.constant}
        '4': {name: invalid.illegal}
  ipv6:
    patterns:
    - name: text.network.cisco.ios.interface.ipv6
      match: \s*(ipv6\s+address)\s+(\S+\s+)?((?:(?:(?:[0-9A-Fa-f]{1,4}:){7}(?:[0-9A-Fa-f]{1,4}|:))|(?:(?:[0-9A-Fa-f]{1,4}:){6}(?::[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(?:(?:[0-9A-Fa-f]{1,4}:){5}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(?:(?:[0-9A-Fa-f]{1,4}:){4}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,3})|(?:(?::[0-9A-Fa-f]{1,4})?:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9A-Fa-f]{1,4}:){3}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,4})|(?:(?::[0-9A-Fa-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9A-Fa-f]{1,4}:){2}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,5})|(?:(?::[0-9A-Fa-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9A-Fa-f]{1,4}:){1}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,6})|(?:(?::[0-9A-Fa-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?::(?:(?:(?::[0-9A-Fa-f]{1,4}){1,7})|(?:(?::[0-9A-Fa-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(?:%.+)?)(/1?\d?\d)(\s+eui-64)?(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: constant.numeric}
        '4': {name: constant.numeric}
        '5': {name: support.constant}
        '6': {name: invalid.illegal}
  ipv6-nd-prefix:
    patterns:
    - name: text.network.cisco.ios.interface.ipv6.nd.prefix
      match: \s*(ipv6\s+nd\s+prefix)\s+(\S+\s+)?((?:(?:(?:[0-9A-Fa-f]{1,4}:){7}(?:[0-9A-Fa-f]{1,4}|:))|(?:(?:[0-9A-Fa-f]{1,4}:){6}(?::[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(?:(?:[0-9A-Fa-f]{1,4}:){5}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(?:(?:[0-9A-Fa-f]{1,4}:){4}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,3})|(?:(?::[0-9A-Fa-f]{1,4})?:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9A-Fa-f]{1,4}:){3}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,4})|(?:(?::[0-9A-Fa-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9A-Fa-f]{1,4}:){2}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,5})|(?:(?::[0-9A-Fa-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9A-Fa-f]{1,4}:){1}(?:(?:(?::[0-9A-Fa-f]{1,4}){1,6})|(?:(?::[0-9A-Fa-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?::(?:(?:(?::[0-9A-Fa-f]{1,4}){1,7})|(?:(?::[0-9A-Fa-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(?:%.+)?)(/1?\d?\d)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: constant.numeric}
        '4': {name: constant.numeric}
        '5': {name: invalid.illegal}
  
  vrf-legacy:
    patterns:
    - name: text.network.cisco.ios.interface.vrf
      match: \s*ip\s+vrf\s+forwarding\s+\S+(?:\s+(\S.*))?
      captures:
        '0': {name: invalid.deprecated}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}

  vrf:
    patterns:
    - name: text.network.cisco.ios.interface.vrf
      match: \s*(vrf\s+forwarding)\s+(\S+)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: invalid.illegal}

  hsrp-version:
    patterns:
    - name: text.network.cisco.ios.interface.hsrp.version
      match: \s*(standby\s+version)\s+(\d)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: constant.numeric}
        '3': {name: invalid.illegal}

  hsrp-priority:
    patterns:
    - name: text.network.cisco.ios.interface.hsrp.priority
      match: \s*(standby)(\s+\d+)?\s+(priority)\s+(\d+)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: constant.numeric}
        '3': {name: support.constant}
        '4': {name: constant.numeric}
        '5': {name: invalid.illegal}

  hsrp-preempt:
    patterns:
    - name: text.network.cisco.ios.interface.hsrp.preempt
      match: \s*(standby)(\s+\d+)?\s+(preempt)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: constant.numeric}
        '3': {name: support.constant}
        '4': {name: invalid.illegal}

  hsrp-ipv6:
    patterns:
    - name: text.network.cisco.ios.interface.hsrp.ipv6
      match: \s*(standby)(\s+\d+)?\s+(ipv6)\s+(autoconfig)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: constant.numeric}
        '3': {name: support.constant}
        '4': {name: support.constant}
        '5': {name: invalid.illegal}

  hsrp-ip:
    patterns:
    - name: text.network.cisco.ios.interface.hsrp.ip
      match: \s*(standby)(\s+\d+)?\s+(ip)\s+((?:(?:[0-2]?\d?\d)\.){3}[0-2]?\d?\d)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: constant.numeric}
        '3': {name: support.constant}
        '4': {name: constant.numeric}
        '5': {name: invalid.illegal}

  access-group:
    patterns:
    - name: text.network.cisco.ios.interface.vrf
      match: \s*(ip\s+access-group)\s+(\S+)\s+(in|out)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: string.unquoted}
        '3': {name: support.constant}
        '4': {name: invalid.illegal}

  ip-redirects:
    patterns:
    - name: text.network.cisco.ios.interface.redirects
      match: \s*(ip(?:v6)?)\s+(redirects)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: invalid.illegal}

  ip-proxy-arp:
    patterns:
    - name: text.network.cisco.ios.interface.ipv4.proxy-arp
      match: \s*(ip)\s+(proxy-arp)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: invalid.illegal}

  ip-helper:
    patterns:
    - name: text.network.cisco.ios.interface.ipv4.helper
      match: \s*(ip)\s+(helper-address)\s+((?:(?:[0-2]?\d?\d)\.){3}[0-2]?\d?\d)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: constant.numeric}
        '4': {name: invalid.illegal}

  no-shutdown:
    patterns:
    - name: text.network.cisco.ios.interface.ipv4.helper
      match: \s*(no)\s+(shutdown)(?:\s+(\S.*))?
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: invalid.illegal}

  mode:
    patterns:
    - name: text.network.cisco.ios.interface.switchport.mode
      match: (mode)\s+(trunk|access|capture|fabricpath)\s*
      captures:
        '1': {name: support.constant}
        '2': {name: entity.name.function}

  shutdown:
    patterns:
    - name: text.network.cisco.ios.interface.ip
      match: ^\s*(shutdown)\s*$
      captures:
        '1': {name: keyword.other}

  switchport:
    patterns:
    - name: text.network.cisco.ios.interface.switchport
      begin: ^\s*(switchport)\s+
      beginCaptures:
        '1': {name: support.constant}
      end: $
      patterns:
      - include: '#mode'
      - include: '#trunk'
      - include: '#access'

  trunk:
    patterns:
    - name: text.network.cisco.ios.interface.switchport.trunk
      match: (trunk)\s+(allowed\s+vlan)\s+(?:(add)|(remove))?\s+(\d+(?:\s*[,-]\s*(?:\d+))*)
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: entity.name.function}
        '4': {name: entity.name.tag}
        '5': {name: constant.numeric.vlan.id}
  
  show-run-int:
    patterns:
    - name: text.network.cisco.ios.interface.show.run
      match: (show)\s+(run)\s+(interface)\s+(\D+)(?:\s+)?(\d+(?:/\d+)*(?:\.\d+)?)
      captures:
        '1': {name: support.constant}
        '2': {name: support.constant}
        '3': {name: entity.name.function}
        '4': {name: entity.other.inherited-class}
        '5': {name: constant.numeric.vlan.id}
